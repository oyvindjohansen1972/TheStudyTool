@using TestZuckerbergEditor.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div class="container">

    <br /><br /><br />    
    <section id="loginForm">
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger col-centered" })

            <div class="form-group">
                <div class="col-centered">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger col-centered" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-centered">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger col-centered" })
                </div>
            </div>
            @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>*@

            //Enable this once you have account confirmation enabled for password reset functionality
            <p style="text-align:center">
                @Html.ActionLink("Forgot your password?", "ForgotPassword")
            </p>


            <p class="pager" style="line-height: 70px;">
                <input type="submit" value="LOG IN" class="btn btn-primary" />
            </p>
        }
    </section>

</div> <!-- container finished-->
